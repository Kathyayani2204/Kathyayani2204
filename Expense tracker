import json
from datetime import datetime

class ExpenseTracker:
    def __init__(self, filename='expenses.json'):
        self.filename = filename
        self.expenses = self.load_expenses()

    def load_expenses(self):
        try:
            with open(self.filename, 'r') as file:
                return json.load(file)
        except FileNotFoundError:
            return []

    def save_expenses(self):
        with open(self.filename, 'w') as file:
            json.dump(self.expenses, file, indent=4)

    def add_expense(self, amount, category, description=''):
        expense = {
            'amount': amount,
            'category': category,
            'description': description,
            'date': datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        }
        self.expenses.append(expense)
        self.save_expenses()
        print("Expense added successfully!")

    def view_expenses(self):
        if not self.expenses:
            print("No expenses recorded.")
            return

        for idx, expense in enumerate(self.expenses, 1):
            print(f"{idx}. {expense['date']} - {expense['category']} - ${expense['amount']} - {expense['description']}")

    def delete_expense(self, index):
        try:
            removed = self.expenses.pop(index - 1)
            self.save_expenses()
            print(f"Deleted expense: {removed['category']} - ${removed['amount']}")
        except IndexError:
            print("Invalid index. Please try again.")

    def calculate_total_expenses(self):
        total = sum(expense['amount'] for expense in self.expenses)
        print(f"Total expenses: ${total}")

def main():
    tracker = ExpenseTracker()

    while True:
        print("\nExpense Tracker")
        print("1. Add Expense")
        print("2. View Expenses")
        print("3. Delete Expense")
        print("4. Calculate Total Expenses")
        print("5. Exit")

        choice = input("Choose an option: ")

        if choice == '1':
            try:
                amount = float(input("Enter amount: "))
                category = input("Enter category: ")
                description = input("Enter description (optional): ")
                tracker.add_expense(amount, category, description)
            except ValueError:
                print("Invalid amount. Please enter a number.")
        elif choice == '2':
            tracker.view_expenses()
        elif choice == '3':
            try:
                index = int(input("Enter the index of the expense to delete: "))
                tracker.delete_expense(index)
            except ValueError:
                print("Invalid index. Please enter a number.")
        elif choice == '4':
            tracker.calculate_total_expenses()
        elif choice == '5':
            print("Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
